<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="post">
  
<!-- Board -->
  <!-- 게시판 전체 조회 -->
  <select id="getAllBoard" resultType="boardVo">
    select * 
    from board
  </select>
  
  <!-- 특정 게시판 조회 -->
  <select id="getSelectBoard" resultType="boardVo" parameterType="String">
     select *
     from board
     where boardNo = #{boardNo}
  </select>
  
  <!-- 게시판 이름 조회 -->
  <select parameterType="String" resultType="String" id="getSelectBoardNm"> 
  	select boardNm from board where boardNo = #{boardNo}
  </select>
  
<!-- Post -->
  <!-- 게시글 전체 조회 -->
  <select id="getAllPost" resultType="postVo" parameterType="String">
    select * 
    from post
    where boardNo = #{boardNo}
    ORDER BY postRegDt DESC
  </select>
  
  <!-- 특정 게시글 조회 -->
  <select id="getSelectPost" resultType="postVo" parameterType="String">
    select /*+INDEX(post PK_POST)*/ *
    from post
    where postNo = #{postNo}
  </select>
  
	<!-- 게시글 페이징 조회 -->
	<select id="selectPostPagingList" parameterType="pageVo" resultType="postVo"> 
		select *
		from (select a.*, rownum rn from (select POSTNO, POSTTITLE, POSTGN, BOARDNO, WRITERID,trim(POSTDELFLAG) as
		POSTDELFLAG, POSTREGDT, level FROM post where BOARDNO = #{boardNo}
		START WITH parentPostNo IS NULL CONNECT BY parentPostNo = prior
		POSTNO order SIBLINGS By POSTGN desc, POSTNO) a) a where rn between
		((#{pageNo}-1)*10)+1 and (#{pageNo})*10 
	</select>
	
	<!-- 전체 게시글 수 조회 -->
	<select id="getPostCnt" resultType="Integer" parameterType="Integer">
		select count (*)
		from post
		where boardNo = #{boardNo}
	</select>

  <!-- 게시글 생성 -->
  <insert parameterType="postVo" id="insertPost">
	<selectKey resultType="int" order="BEFORE" keyProperty="postNo">
		select seq_postNo.nextval from dual
    </selectKey>
	insert into post (postNo, postTitle, postContent, postRegDt, postDelFlag, postGn, writerId, parentPostNo, boardNo) 
	values (#{postNo}, #{postTitle}, #{postContent}, sysdate, 'T', #{postNo}, #{writerId}, '', #{boardNo})
  </insert>

<!-- 	
    <insert parameterType="postVo" id="insertPost">
		INSERT INTO POST 
		VALUES (SEQ_POSTNO.NEXTVAL, #{postContent}, SYSDATE, NVL(#{parentPostNo,jdbcType=VARCHAR}, SEQ_POST.CURRVAL), 
		        'T', #{writerId}, #{boardNo}, #{parentPostNo,jdbcType=VARCHAR}, #{postTitle})
	</insert>
-->
  
  <!-- 게시글 수정 -->
  <update id="updatePost" parameterType="postVo">
  	 update post
  	 set postTitle = #{postTitle},
  	     postContent = #{postContent}
  	 where postNo = #{postNo}  
  </update>	
  
  <!-- 게시글 삭제 -->
  <delete id="deletePost" parameterType="String">
	update post
  	   set postDelFlag = 'F'
  	where postNo = #{postNo}
  </delete>
  
<!-- UploadFile -->
  <!-- 첨부파일 목록 조회 -->
  <select parameterType="String" resultType="uploadFileVo" id="getAllFile">
	select * 
	from UPLOADFILE 
	where POSTNO = #{POSTNO}
  </select>
  
  <!-- 
   <select parameterType="java.lang.String" resultType="uploadFileVo" id="selectUploadFile">
	 select * 
	 from UPLOADFILE 
	 where POSTNO = #{POSTNO}
   </select>
  -->
  
  <!-- 첨부파일 조회  -->
  <select parameterType="String" resultType="uploadfileVo" id="selectFile">
	select * 
	from UPLOADFILE 
	where UPLOADFILENO = #{UPLOADFILENO}
  </select>
  
  <!--
   <select parameterType="java.lang.String" resultType="UploadfileVo" id="selectUploadFileOne">
	select * 
	from UPLOADFILE 
	where UPLOADFILENO = #{UPLOADFILENO}
   </select>
  -->
  
  <!-- 첨부파일 등록 -->
  <insert parameterType="uploadfileVo" id="insertFile">
  	insert into UPLOADFILE (uploadFileNo, uploadFileNm, uploadRealFilePath, postNo)
	values(SEQ_UPLOADFILENO.NEXTVAL, #{uploadFileNm}, #{uploadRealFilePath}, SEQ_POSTNO.CURRVAL)
   </insert>

  <!-- 첨부파일 삭제 -->
  <delete parameterType="String" id="deleteFile">
   	delete from UPLOADFILE 
   	where POSTNO = #{POSTNO}
  </delete>

<!-- Comments -->
  <!-- 댓글 전체 조회 -->
  <select id="getAllComments" resultType="commentsVo" parameterType="String">
    select * 
    from comments
    where postNo = #{postNo}
    ORDER BY cmtRegDt DESC
  </select>
  
  <!-- 댓글 특정 조회 -->
  <select id="getSelectComments" resultType="commentsVo" parameterType="String">
     select *
     from comments
     where cmtNo = #{cmtNo}
  </select>
  
  <!-- 댓글 생성 -->
  <insert id="insertComments" parameterType="commentsVo">
 	 insert into comments
  		    (cmtNo, cmtContent, cmtRegDt, cmtDelFlag, memId, postNo)
  	 values (seq_cmtNo.nextval, #{cmtContent}, sysdate, 'T', #{memId}, #{postNo})
  </insert>	
  
  <!-- 댓글 삭제 -->
  <delete id="deleteComments" parameterType="String">
		delete from comments
		where cmtNo = #{cmtNo}
  </delete>
  
</mapper>

