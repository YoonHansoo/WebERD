<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ticket">
	
	<!--전체 티겟 검색  -->
	<select id="getAllTicketList" resultType="ticketVo">
	select * 
	 from ticket
	 order by ticketNo
	</select>
	
	<!-- 특정 티켓 검색 -->
	<select id="selectTicket" resultType="ticketVo" parameterType="String">
		select * 
	 		from ticket
		  where ticketNo=#{ticketNo}
	 </select>
	 
	 <!-- 티켓정보 수정 -->
	 <update id="updateTicket" parameterType="ticketVo">
	 	update ticket
	 		set ticketPrice =#{ticketPrice, jdbcType=VARCHAR},
	 			ticketImg =#{ticketImg, jdbcType=VARCHAR},
	 			ticketContent=#{ticketContent, jdbcType=VARCHAR}
	 	where ticketNo=#{ticketNo}
	 </update>
	 
	 <!-- 티켓 삭제  -->
	 <delete id="deleteTicket" parameterType="String">
	 	delete ticket 
	 	where ticketNo=#{ticketNo}  
	 </delete>
	 
	 <!-- 티켓 추가  -->
	 <insert id="insertTicket" parameterType="ticketVo">
	 	insert into 
	 	ticket ( ticketno,
			     ticketprice,
				 ticketimg,
				 ticketcontent,
				 ticketindt
	 	) 
	 	values(seq_ticketno.nextval,
	 		   nvl(#{ticketPrice,jdbcType=VARCHAR}, '0'),
	 		   #{ticketImg,jdbcType=VARCHAR},
	 		   #{ticketContent,jdbcType=VARCHAR}, 
	 		   sysdate) 
	 		   
	 </insert>
	 	
	 <select id="selectTicketHist" resultType="ticketBuyHistVo" parameterType="java.util.Map">
		select *
			from ticket_buy_hist
			where
			<if test="ticketNo != null">
				ticketNo=#{ticketNo} and
			</if>
				ticketBuyDt <![CDATA[ >= ]]> #{startDt} and
				ticketBuyDt <![CDATA[ < ]]>	#{endDt}
	 </select>
	 
	 <select id="selectTicketMonthList" parameterType="java.util.Map" resultType="ticketBuyHistVo">
		select to_char(ticketBuyDt,'mm')as ticketMonDt ,
		       sum(ticketFee) as ticketFee from ticket_buy_hist 
		where to_char(ticketBuyDt,'yyyy') like #{yyyy} || '%'
		and ticketNo = #{ticketNo}  
		 group by to_char(ticketBuyDt,'mm')
		order by ticketMonDt asc
	 
	 </select>
	 
	 <select id="selectTicketYearList" resultType="ticketBuyHistVo" parameterType="String">
	   select ticketMonDt, sum(fee)as TICKETFEE
   	 from  (select distinct(ticketMonDt) as ticketMonDt,
         case when ticketMonDts = ticketMonDt then TICKETFEE else 0 end as fee                
               from (select to_char(TICKETBUYDT,'YYYYMM')as ticketMonDts ,
                                sum(TICKETFEE) as TICKETFEE
                       from TICKET_BUY_HIST 
                      where  TICKETBUYDT <![CDATA[ > ]]> to_char(trunc(add_months(sysdate, -12), 'dd'),'yyyymmdd')
                        and ticketNo=#{ticketNo}
                       group by to_char(TICKETBUYDT,'YYYYMM')
                       order by ticketMonDts) a, 
                       (select to_char(add_months(sysdate,-(level-1)),'yyyyMM') as ticketMonDt
                          from dual
                       connect by level <![CDATA[ <= ]]> 12) b 
                order by ticketMonDt)
                  group by ticketMonDt
                order by ticketMonDt
	 </select>
	 
  <insert id="insertticketBuyHist" parameterType="ticketBuyHistVo">
     insert into 
        TICKET_BUY_HIST  (TICKETBUYNO, TICKETNO, MEMID, TICKETBUYDT, TICKETFEE)
       values (seq_ticketbuyno.nextval, #{ticketNo},#{memId},sysdate,#{ticketFee})
     </insert>
     
     
    	 <select id="selectTicketYearPieList" resultType="ticketBuyHistVo" parameterType="java.util.Map">
	   select ticketMonDt, sum(fee) as TICKETFEE
   	 from  (select distinct(ticketMonDt) as ticketMonDt,
         case when ticketMonDts = ticketMonDt then TICKETFEE else 0 end as fee                
               from (select to_char(TICKETBUYDT,'YYYYMM')as ticketMonDts ,
                                sum(TICKETFEE) as TICKETFEE
                       from TICKET_BUY_HIST 
                      where  to_char(TICKETBUYDT,'yyyy') like 	#{yyyy}||'%'
                        and ticketNo=#{ticketNo}
                       group by to_char(TICKETBUYDT,'YYYYMM')
                       order by ticketMonDts) a, 
                       (select to_char(add_months(#{yyyyMMdd},+(level-1)),'yyyyMM') as ticketMonDt
                          from dual
                       connect by level<![CDATA[ <= ]]> 12) b 
                order by ticketMonDt)
                  group by ticketMonDt
                order by ticketMonDt
	 </select> 
</mapper>